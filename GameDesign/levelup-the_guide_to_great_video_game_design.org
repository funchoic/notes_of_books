* LEVEL1 基礎知識
ゲームには、ルールと勝利条件がある
ゲームの目標は,1950年代のボードゲームと同じくらいシンプルであるべき
ゲームジャンルは多種多様。組み合わせて新しいジャンルを作ることをためらわないこと
ゲームテクノロジは常に進化している。適応できないと取り残される
テレビゲームを作るには、さまざまな職種の人達が必要である

* LEVEL2 アイデア
すべてのゲーマーは、よいゲームを欲している
あなたのゲームがおもしろくなる保証はどこにもない
「おもしろい」アイデアから作りはじめる。開発途中で「おもしろくない」アイデアを取り除いていく。そうすれば、最後に残るのはおもしろいものだけになるはず。
自分のアイデアに愛着を持たない。ゲームのコンセプトに合わないものや、不必要な要素が混ざったものは、よいアイデアでもどんどん捨てる
アイデア自体に価値はない。問題はそれをどう使うかだ。
もし行き詰まったら、迷わず休憩しよう。でも、先延ばしにはしないこと。
* LEVEL3 ストーリー
ストーリーを必要とするゲームと、必要としないゲームがある。どちらもゲームプレイは必要である。
ストーリーには状況設定、葛藤、解決がかならずある
ゲームプレイに無理やり合わせたストーリーを作ってはいけない。
どんなことでも、たいていはゲームプレイ化できる。
プレイヤーがもう一度遊びたいと思える世界観を作れば、クリア後もきっと遊んでくれるはずだ。
キャラクターの死は、プレイヤーにとって意味のあるものにすること。
名前は短く、描写的に。
子供を過小評価してはいけない。あなたが思うよりずっと賢い。
ライセンスをリスペクトしつつも、「自分ならではの作品」を作ることをためらうな

* LEVEL4ゲームデザインドキュメント
ゲームはチリを作るのに似ている。正しいレシピ、ツール、材料、味を調整する時間が必要である
GDD（ゲームデザインドキュメント）は、ゲームで何が起こるかを正確に説明するのに十分な長さが必要だ
想定するESRBレーティング（対象年令を指定するレーティング）に合わせてデザインすること
デザインは、ワンシート、天ページャー、ゲームデザインドキュメントの順にすすめること。
ビートチャートのようなツールを使って、早い時期にゲームデザインの問題を見つけよう
長いデザインドキュメントを読みたいと思う人はいない。チームにアイデアを伝える最適な方法を見つけよう。
デザインとは流動的なものである。プロダクション期間中、常に変化し、絶え間なく流れ、突然変異し、そして進化するだろう。
ゲームの代金に見合う内容を提供しよう
ファイルとドキュメントは賢く命名して整理整頓しよう

* LEVEL53つのCキャラクター
ゲームの外見はゲームデザインに合わせる。キャラクターの外見は、行動と正確に合わせるべきである
キャラクターには目立つ形、シルエット、色、テクスチャを使おう
主人公の名前は適切に。
カスタマイズできると、キャラクターへの親近感が高まる。
プレイヤーキャラクターを基準単位にして、メトリクスを決定しよう。
歩くことは、ゲームプレイではない。
状態変化が発生したら、プレイヤーキャラクターにそれを反映させよう。
SPCとコンパニオンを正しく表現するためには、たいへんな労力が必要となる。プレイヤーキャラクターを賞賛させるのを忘れないこと。
マルチ・プレイヤー用キャラクターを作るときは、キャラクター間のバランスが大事
NPCにはゲームプレイ上の役割を与えよう

* LEVEL63つのCカメラ
ゲームに適切なカメラを選ぼう。
フレームレート、カメラの速度、レベルのち京に気を配り、3D良いを防ごう。
一人称カメラはゲーム世界への深い没入感を提供する
三人称カメラを使うとキャラクターと世界がよく見える
プレイヤーの「ガイド役」としてカメラを扱おう。
問題を引き起こすカメラ処理は、削除すること。
プレイヤーがカメラを操作できない場合は、それを明確に伝えよう。
ハリウッドスタイルのカメラアングルとショットを使って、映像とドラマを最大限に演出しよう
カメラの視界から絶対にキャラクターを追い出さないこと
カメラをうまく使って、複数のプレイヤーを画面に収めよう

* LEVEL73つのC操作方法
操作方法をデザインするときには、人間工学を考慮することがとても重要。
テーマに合わせて操作を割り当てる方法もある。
同じジャンルで成功している他のゲームの操作方法をまねれば、あなたのゲームの操作方法も簡単に受け入れてもらえるはず。
ボタンが押されたら、アクションを必ず起こそう。
ポジティブレスポンスだけでなく、ネガティブレスポンスも有効活用しよう。
「ゲーマー親指」やその他の健康問題を防ぐために、プレイヤーに休憩を用意しよう（あなたがゲームをあそぶときも積極的に休憩しよう
操作はキャラクター依存か？画面依存か？一度行った選択には忠実に従おう。
ゲームないで起きることと合っていない操作方法は避けよう。
コントローラの特殊機能を活用して、直感的な操作にしよう。
タイムラグと通信のち円に注意しよう。
モーションコントローラを使うときは、現実世界の動作を模倣していて、大きな動きにすること

* LEVEL8HUIとアイコン
HUD（ヘッドアップディスプレイ：プレイヤーに情報を伝えるための表示）とは、ゲームのコンセプトを伝えるものである
HUDの情報は、プレイヤーが素早く理解できるようにする
HUDは画面の隅ではなく「セーフティゾーン」の近くに表示する
見やすく読みやすいアイコンをデザインすること
予測可能で実行しやすいQTE（クイックタイムイベント）を作ろう
どのメニュー画面からも、3日位以内のボタン入力でゲーム画面へ戻れるようにするべきである。
少ない画面で重要な情報を得られるようにしよう。
フォントは読みやすさがいちばん。小さくしすぎたり、装飾に凝りすぎたりしないように。
「退屈な」画面でも、エキサイティングで興味深いものに演出できる。
クレジット画面では、認めるべき功績を認めること

* LEVEL9レベルデザイン
テーマ → 名前
** レベルとは ４つの定義
- マップやロケーション
- 特定のゲームプレイ体験によって区切られた物理的な空間
- プレイヤーの進行度を表す単位
- 獲得スコア、獲得経験値、獲得スキルなどに基づいたプレイヤーへのランク付け。キャラクターの進行度と成長度を記録するための用語。

** 使い古されたお決まりのテーマも、ひねりを加えれば驚くほどよいものにできる。
お決まりのワールド
- 宇宙
- 炎と氷
- ダンジョン／洞窟／遺跡
- 向上
- ジャングル
- 不気味な場所／幽霊屋敷／墓地
- 海賊
- 誇りだらけの都市
- 宇宙ステーション
- 下水道

** 「メキシカンピザ」テクニックを使ってユニークなレベルテーマを作ろう。
普段思いつかない２つのものを組み合わせること度、驚くほどよいものが生まれる

** レベル名は、レベルの雰囲気と情報を伝えるのに役立つ。
プログラム用のレベル名
- 最大8文字

プレイヤー用のレベル名
- 数字（1-1など）
- ロケーション
- 描写的な名前
- 語呂合わせ

** 世界→レベル→体験→一つ一つのゲームプレイ の順番に、トップダウンでデザインしよう。
ディズニーランドの想像と構造を真似る。
効果的な方法でひとつの冒険から次の冒険へとゲストを移動させるように出会いんされている。
>> ディズニランドをデザインし始めたとき、ちょうど映画を作るのと同じように考えていました。
私達はストーリーを伝える必要がありました。
むしろこの場合は、複数のストーリーです。
映画製作では、私たちはイベントやシーンの論理的な流れを組み立て、ストーリーのポイントからポイントまで観客を連れて行きます。
万一シーン2を省略して、シーン1からシーン3に「跳ね跳び」をしたら、映画の真っ最中にロビーへポップコーンをとりに全観客を連れ出すようなものです。

- ディズニーランド
世界 → ランド → アトラクション → 一つ一つのシーン
- テレビゲーム
世界 → レベル → 体験 → 一つ一つのゲームプレイ

** スケルトンは使いすぎなんてことはない。
** マップやとスターを使って、情報や伏線を提供しよう。
** レベルのテーマを次の中から決定しよう。脱出／サバイバル、探検、教育、道徳。
** ビートチャートを使って、ゲーム全体のデザインの欠点を見つけ出そう。
最低限入れるべき情報
- レベル名
- ファイル名
- プレイヤーの目標
- ストーリービート
- プレイスタイル
- 敵
- メカニクス
- NPC
- ボーナス要素
- 時間帯
- 色使い

** 厳選した数少ないゲームプレイシステムとメカニクスを使ってデザインしよう。再利用して最大限のプレイを引き出そう。
** プレイヤーはどんなときでもゲームの不具合を見つける。
** あなたが望むようにプレイヤーにゲームを遊ばせよう。
** レベルは通路型？ それとも島型？ 書くスタイルの長所を活かしてデザインしよう。
- 通路型
 一直線のゲーム。プレイヤーがどこにどのように入っていどうするか把握できる。
 プレイヤーの逆走を防ぐ。
- 島型
 ユーザが行きたい場所を選べる。

 スーパーマリオ64
** グレイボックスを作ろう。その中でカメラの設置場所を検討し、地形構造上の問題やゲームプレイで発生する問題を防ごう。
** 歩くことは、決してゲームプレイではない。
** もし長いとか退屈だと感じたら、それは真実である。
** すべての指状の脇道の終わりに報酬を設置するべきだ。それがただのゴミ箱でも。
** プレイヤーが行けると思う場所には、行けるべきだ。
** プレイグラウンドとバトルアリーナを使って、メトリクスとシステムを検証しよう。
** トレーニングレベルは最初に作成したほうがよい。
** ゲーム全体を通してプレイヤーをトレーニングする。

* LEVEL10バトル
* LEVEL11敵キャラクター
* LEVEL12メカニクス
* LEVEL13パワーマップ
* LEVEL14マルチプレイヤー
* LEVEL15音楽についてのノート
* LEVEL16カットシーン
* LEVEL17最もタフな作業へ
