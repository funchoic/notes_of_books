* フィルタの使用法
** フィルタとはコマンドの一種
標準入力からデータを受け取って、そのデータを加工して、標準出力に書き出す。
データの受け渡しには、パイプライン(｜)をつかう。
このように
: cat file |
:     filter1 |
:     filter2 |
:     while read LINE
:     do
:         ...
:     done
複数のファイルをあつかう。
: cat file1 file2 file3 | filter1 | filter2

** sed コマンド
オプション
*** -e 'command'
コマンドの実行(edit)
: sed -e "s/ABC/DEF/" somefile
sはsubstitute(置換)で、ABCにマッチする最初の文字列をDEFに変えるというもの。
: cat somefile | sed -e "s/ABC/DEF/" > result
なども書ける。

: "s/ABC/DEF/g"
とすれば、ABCにマッチするすべての文字列をDEFに変える。

*** -n
明示的に p としない限り表示しない。
: sed -n '3p' file
とすると、fileの3行目を表示する。

*** -f filename
filename のファイルに含まれているコマンドを実行する。

** sedをパイプでつなぐ
: cat file |
:     sed -e "s/ABC/DEF/g" |
:     sed -e "s/HIJ/DEF/g" |
:     while read LINE
:     do
:         ...
:     done
以下のようにも書ける。

: cat file |
:     sed -e "s/ABC/DEF/g" \
:         -e "s/HIJ/DEF/g" |
:     while read LINE
:     do
:         ...
:     done
** デリミタの変更
: "s/ABC/DEF/g"
の/部分は、ただの慣習であり、なんの文字がきても動作する。
: "s%ABC%DEF%g"
でも、
: "sxABCxDEFxg"
でも動作する。
** 正規表現
: . 	改行文字以外の任意の1文字
: * 	直前の1文字の0回以上の繰り返しに一致。直前の文字は正規表現でも構わない
: ^ 	行の先頭
: $ 	行の末尾
: [ ] 	かっこ内の任意の1文字に一致。ハイフン（-）で範囲指定もできる
: [^ ] 	かっこ内の任意の1文字に不一致。ハイフン（-）で範囲指定もできる
: \+ 	直前の文字の1個以上の繰り返しに一致
: \? 	直前の文字の0または1文字に一致
: \{n\} 	直前の文字のn個の繰り返しに一致
: \{n,\} 	直前の文字のn個以上の繰り返しに一致
: \{,m\} 	直前の文字のm個以下の繰り返しに一致
: \{n,m\} 	直前の文字のn個以上，m個以下の繰り返しに一致
: パターン1\|パターン2 	パターン1またはパターン2のいずれかに一致
: \(パターン\) 	パターンをグループ化する。マッチした内容は\1や\2として利用できる
: \ 	正規表現に使われる記号を普通の文字として扱う
** 条件にあった部分を抜き出す
sedの置換では置換条件で「\(...\)」にくくった文字列を置き換え文字として利用できる。
その際，始めに現われた\(...\)が「\1」，次に現われた\(...\)が「\2」に代入される。

** awkコマンド
** trコマンド 大文字、小文字の入れ替え
: cat file | tr '[A-Z]' '[a-z]' >lowerfile
